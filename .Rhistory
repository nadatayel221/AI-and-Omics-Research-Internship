radious <-5.5
if (radious > 0){print(area<- pi*radious*radious}
q()
c(1,2,3) *2
die <- 1:5
1:6 -> die ''
1:6 -> die
print(die)
die =1:6
print(die)
ls()
scorands <- 10 if(scores== 10) {grade ="A"} else if (grade<10){grade ="B"} else {grade ="c"}
scores <- 10 if(scores== 10) {grade ="A"} else if (scores<10){grade ="B"} else {grade ="c"}
scores <-10
if(scores== 10) {grade ="A"} else if (scores<10){grade ="B"} else {grade ="c"}
score -> 10
score = 10
ls ()
count -> 3
count <- 3
while (count >0) {print (count) count <- count -1 }
while (count >0){
print (count)
count <- count -1 }
Number <- 10
Name="Nada Tayel "
if (Number==10){grade="A"}
else if (Number<10 && Number>5){grade="B"}
if (Number==10){grade="A"}  else if (Number<10 && Number>5){grade="B"}
Die <- 1:6
Name="Ahmed"
Grades
print(die)
die <- 1:6
print(die)
sum(die)
ls()
die %o% die
round(3.5)
mean(die)
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
y <- x^3
qplot(x, y)
qplot
library("ggplot2")
install.packages("ggplot2")
qplot
library("ggplot2")
qplot
qplot(x, y)
library(cli)
library(farver)
library(glue)
library(isoband)
library(gtable)
library(labeling)
library(lifecycle)
library(magrittr)
library(pillar)
library(pkgconfig)
library(R6)
library(RColorBrewer)
library(rlang)
library(scales)
library(tibble)
library(withr)
library(viridisLite)
library(utf8)
library(vctrs)
library(boot, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(class, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(cluster, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(codetools, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(compiler, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(foreign, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(grid, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(KernSmooth, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(lattice, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(MASS, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(Matrix, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(mgcv, lib.loc = "C:/Program Files/R/R-4.5.1/library")
detach("package:nlme", unload = TRUE)
library(nnet, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(nlme, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(parallel, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(rpart, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(spatial, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(splines, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(stats4, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(survival, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(tcltk, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(tools, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(translations, lib.loc = "C:/Program Files/R/R-4.5.1/library")
x<- c(1,1,3,4,5,6,6,8)
qplot(x, binwidth = 1)
x <- c(1,2,3,4,5,6,6,6,7)
qplot(x,bandwidth=2)
die <- 1:6
y <- x**(3)
qplot(x,y)
replicate(3,1+1)
replicate(10, roll())
rolls <- replicate(1000,roll())
dog=readxl::read_xlsx(file.choose())
library (readxl)
install.packages("readxl")
library(readxl)
dog <- read_xlsx(file.choose())
install.packages("roll")
rolls <-replicate(10000,roll())
install.packages(dplyr)
library(translations, lib.loc = "C:/Program Files/R/R-4.5.1/library")
library(roll)
library(rematch)
library(RcppParallel)
library(RcppArmadillo)
library(Rcpp)
library(progress)
library(prettyunits)
library(crayon)
library(hms)
library(cpp11)
library(cellranger)
install.packages("dice")
library(dice)
getEventProb(nrolls = 10000,ndicePerRoll = 1,nsidesPerDie = 6)
# 1. Define dice roll function
roll <- function() {
sample(1:6, size = 1, replace = TRUE)
}
# 2. Simulate 10,000 rolls
set.seed(123)  # For reproducible results
rolls <- replicate(10000, roll())
# 3. Analyze results
table(rolls)   # Frequency count
prop.table(table(rolls))  # Probabilities
getwd()
setwd("C:/Document/AI and Omics Research Internship/working_directory")
